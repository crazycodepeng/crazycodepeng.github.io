[{"title":"各路API","date":"2017-07-25T00:49:56.000Z","path":"2017/07/25/各路API/","text":"一个破解视频网站VIP的地址 Google 设计标准 Material design - 介绍 美团云人脸识别 聚合数据 - 各类数据接口 讯飞开放平台 - 语音 神策数据 - 用户数据分析 Google 浏览器插件 浏览GitHub代码 浏览器标签页美化 在线管理GitHub代码 批量下载网页图片 永久的书签 推送 LeanCloud 腾讯信鸽 阿里云 移动推送 小米推送 个推 极光 百度云推送 云巴 箭扣社交云 WeCloud 华为推送平台 友盟消息推送 魅族消息推送服务Flyme 美的云 诸葛IO 整合 用友eUCUpush","tags":[{"name":"API","slug":"API","permalink":"http://code.liup127.cn/tags/API/"}]},{"title":"Material Design设计","date":"2017-07-12T03:19:20.000Z","path":"2017/07/12/android设计/","text":"小屏幕优先 小屏幕优先，虽然大屏幕会有大部分留白，但是不影响使用，可是如果大屏幕优先，小屏幕就可能无法使用。 密度桶 ，以下是四种常用密度 drawable-nodpi文件夹-放入的是不会根据密度进行缩放的图片-比如背景图 elevation -设置控件高度 添加FAB按钮 首先讲下边这两行添加到你的build.grade文件中 属性 fabSize - FAB的大小 elevation - FAB高度 pressedTranslationZ - 按下FAB，按钮变大的数值 针对老版本项目 CoordinatorLayout 滚动的动态页面 只有添加了 nestedScrollingEnabled=&quot;true&quot; 才能实现工具栏联动 添加自定义字体 将下载的字体放入assets下 在onAttach 方法中实例化字体类型 然后在 onCreate 方法中将字体类型设置给TextView 圆形图像的处理方法 固定宽高比图像 自定义ImageView 重写onMeasure方法 设置宽高比例 将设置好的数值传递给超类 xml中使用，控件高度使用0dp,会根据权重去自动计算控件高度 背景保护 - 文字、图标和背景色一样导致看不到问题 创建一个带透明度的渐变色 用FrameLayout来堆叠视图 动画设置 动画时长一般在～300ms 要根据尺寸和移动距离来确定动画时长 对于穿过屏幕的动画，可以使用快出慢进的过渡 动画可指导用户动作 动画不要重叠，这样会感觉很乱 AnimatedVectorDrawables VectorDravable 矢量图动画 4-19（回顾） 自适应 文本边缘要比行间距大，行间距要适中。 单行文本不易过长，不易阅读。 图片尽量不要裁剪，保持宽高比，保证图片清晰度。 详细信息少的，尽量用dialog形式展示 设计时要均衡空间，不要有太多留白。 整体设计不要参差不齐 通过layout-w600dp和include来为大尺寸屏幕重新设计排版","tags":[{"name":"android","slug":"android","permalink":"http://code.liup127.cn/tags/android/"},{"name":"Material","slug":"Material","permalink":"http://code.liup127.cn/tags/Material/"}]},{"title":"学习索引","date":"2017-07-10T03:33:40.000Z","path":"2017/07/10/学习索引/","text":"Java转Kotlin你要知道的 在线写kotlin代码并运行 Kotlin for Android 高级 Android 工程师的进阶手册 Google 的一套Material icons 配合Android Studio-Material design icon 使用更佳. Hexo 中文介绍地址 Google平台工程工具，示例代码 一个在线写前端代码的网站 一个在线学习软件的网站","tags":[{"name":"Android","slug":"Android","permalink":"http://code.liup127.cn/tags/Android/"},{"name":"索引","slug":"索引","permalink":"http://code.liup127.cn/tags/索引/"},{"name":"学习","slug":"学习","permalink":"http://code.liup127.cn/tags/学习/"}]},{"title":"java转Kotlin遇到的问题","date":"2017-05-26T08:51:36.000Z","path":"2017/05/26/java转Kotlin遇到的问题/","text":"针对Context 我们之前都是直接用 Activity.this,现在这么些不行了，解决方式：直接用this 针对方法 无参数无返回值方法： 12345fun init() &#123; //button 点击事件 hello.onClick &#123; toast(\"点击了button\") &#125; &#125; 带参数无返回值方法： 1234fun showOne(a: Int,b: Int)&#123; toast(a+b) &#125; 带参数带返回值方法 123fun showTwo(a: Int, b: Int): Int &#123; return a + b &#125; Bean类的写法 123456data class UserBean( var name: String, var sex: String, var age: Int) id直接赋值的写法添加anko的依赖 1234compile &apos;org.jetbrains.anko:anko-sdk25:0.10.0-beta-1&apos;// sdk15, sdk19, sdk21, sdk23 are also availablecompile &apos;org.jetbrains.anko:anko-appcompat-v7:0.10.0-beta-1&apos;compile &apos;org.jetbrains.anko:anko-design:0.9.1&apos;compile &apos;org.jetbrains.anko:anko-recyclerview-v7:0.9.1&apos; mainActivity代码 12345678910111213141516171819202122232425262728293031323334353637383940414243444546class MainActivity : AppCompatActivity() &#123; private var aa = \"33\" public var bb = 33 var cc = 'd' override fun onCreate(savedInstanceState: Bundle?) &#123; super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) //TextView 赋值 text2.text = \"我的text2\" //无参数无返回值方法 init() //带参数无返回值方法 showOne(3, 2) //带参数返回值方法 val one = showTwo(3, 2) toast(one) //bean showUser() &#125; fun init() &#123; //button 点击事件 hello.onClick &#123; toast(\"点击了button\") &#125; &#125; fun showOne(a: Int,b: Int)&#123; toast(a+b) &#125; fun showTwo(a: Int, b: Int): Int &#123; return a + b &#125; fun showUser()&#123; UserBean(\"xm\",\"man\",16) &#125;&#125; Kotlin里边省去了java代码里每行结尾的 ; 写到一半发现我重复造轮子了，前人造好的轮子","tags":[{"name":"Android","slug":"Android","permalink":"http://code.liup127.cn/tags/Android/"},{"name":"Kotlin","slug":"Kotlin","permalink":"http://code.liup127.cn/tags/Kotlin/"},{"name":"Java","slug":"Java","permalink":"http://code.liup127.cn/tags/Java/"}]},{"title":"Adb命令","date":"2017-05-17T06:21:55.000Z","path":"2017/05/17/Adb命令/","text":"常用Adb命令1.安装应用 install后边直接拖apk进终端就好 1$ adb install app.apk 2.当连接设备多个时怎么安装apk呢 第一步 1$ adb devices 第二步 1$ adb -s emulator-5553 install app.apk 如下图 3.获取自由模式-前提是手机有root权限 第一步 1$ adb shell 第二步 获得root操作权限 1$ su 第三步 1$ settings put global enable_freeform_support 1 重启模拟器或设备 1$ reboot","tags":[{"name":"Android","slug":"Android","permalink":"http://code.liup127.cn/tags/Android/"},{"name":"Adb","slug":"Adb","permalink":"http://code.liup127.cn/tags/Adb/"}]},{"title":"Android多窗口支持","date":"2017-05-11T12:15:35.000Z","path":"2017/05/11/AndroidN分屏/","text":"Android N 添加了对同时显示多个应用窗口的支持。在手持设备上，两个应用可以在“分屏”模式中左右并排或上下并排显示。在电视设备上，应用可以使用“画中画”模式，在用户与另一个应用交互的同时继续播放视频。 如何启动分屏1.第一种方式 按 Overview 按钮进入 Overview 界面，然后长按 activity 拖动到界面的提示区域(我的手机是顶部)。 2.第二种方式 在 activity 界面长按 Overview 按钮，如果 activity 没有禁用分屏模式就可以进入分屏界面了。 解析官方Demo里的几种启动模式1.第一种启动方式-START BASIC，DEFAULT ACTIVITY(默认的启动方式) 这种启动方式并没有什么特别的，启动的 activity 如果没有设置其他属性，可正常进入分屏模式。 2.第二种启动方式-START UNRESIZEABLE ACTIVITY(禁用分屏模式) 这个模式中在 AndroidManifest 中加入了 android:resizeableActivity=”false” 将禁用分屏， 如果不加这条属性，默认是 true，启用分屏模式。 该模式下如果想启动分屏模式会提示该应用不支持分屏 3.第三种启动方式-START ACTIVITY ADJACENT(共享分屏模式) 如果处于分屏模式下，被启动 activity 直接占据屏幕另一半。否则这种启动方式并没有什么不同。只需要在启动时加入Intent.FLAG_ACTIVITY_LAUNCH_ADJACENT即可。 4.第四种启动方式-START ACTIVITY THAT HANDLES CONFIGURATIONCHANGES(加配置信息) 这种启动方式里在 AndroidManifest 的 configChanges 属性里加入了很多属性。比如禁用横竖屏切换之类的, 如果想仔细了解这些配置可以看官方文档，里面说的很详细，这里就不过多赘述了。 5.第五种启动方式-START ACTIVITY WITH MINIMUM SIZE(Root权限下在AndroidManifest的一些属性配置) 对于 Android N， 清单元素支持以下几种属性，这些属性影响 Activity 在多窗口模式中的行为： android:defaultWidth以自由形状模式启动时 Activity 的默认宽度。 android:defaultHeight以自由形状模式启动时 Activity 的默认高度。 android:gravity以自由形状模式启动时 Activity 的初始位置。请参阅 Gravity 参考资料，了解合适的值设置。 android:minimalHeight、android:minimalWidth分屏和自由形状模式中 Activity 的最小高度和最小宽度。 如果用户在分屏模式中移动分界线，使 Activity 尺寸低于指定的最小值，系统会将 Activity 裁剪为用户请求的尺寸。 在以下节点显示了如何指定 Activity 在自由形状模式中显示时 Activity 的默认大小、位置和最小尺寸 6.第六种启动方式-START ACTIVITY WITH MINIMUM SIZE(Root权限下在代码中的属性配置) 这个和第五种差不多，就是在代码中设置了 多窗口变更通知和查询 Activity类中添加了以下新方法，以支持多窗口显示。 Activity.isInMultiWindowMode()调用该方法以确认 Activity 是否处于多窗口模式。 Activity.isInPictureInPictureMode()调用该方法以确认 Activity 是否处于画中画模式。 注：画中画模式是多窗口模式的特例。 如果 myActivity.isInPictureInPictureMode() 返回 true，则 myActivity.isInMultiWindowMode() 也返回 true。 Activity.onMultiWindowModeChanged()Activity 进入或退出多窗口模式时系统将调用此方法。 在 Activity 进入多窗口模式时，系统向该方法传递 true 值，在退出多窗口模式时，则传递 false 值。 Activity.onPictureInPictureModeChanged()Activity 进入或退出画中画模式时系统将调用此方法。 在 Activity 进入画中画模式时，系统向该方法传递 true 值，在退出画中画模式时，则传递 false 值。 每个方法还有 Fragment 版本，例如 Fragment.isInMultiWindowMode()。 关于更多关于Android多窗口支持的信息可点击链接查看 最后附上我github稍微翻译了一下的官方demo","tags":[{"name":"Google","slug":"Google","permalink":"http://code.liup127.cn/tags/Google/"},{"name":"Android7","slug":"Android7","permalink":"http://code.liup127.cn/tags/Android7/"},{"name":"多窗口支持","slug":"多窗口支持","permalink":"http://code.liup127.cn/tags/多窗口支持/"}]},{"title":"动漫收藏","date":"2017-01-19T07:41:30.000Z","path":"2017/01/19/dong-man/","text":"看过并推荐的动漫排名不分先后 动漫名字 作者 传送门 1.K GoRA×GoHands B站传送门 2.全职猎人 富坚义博 B站传送门 3.进击的巨人 谏山创 资源待整理 4.钢之炼金术师 荒川弘 B站传送门 5.东京食尸鬼 石田スイ 资源待整理 6.亚人 樱井画门 B站传送门 7.一拳超人 ONE(原作),村田雄介(重绘) 资源待整理 8.魔法禁书目录 镰池和马 B站传送门 9.军火女王 高桥庆太郎 B站传送门 10.GANGSTA匪徒 コースケ B站传送门 11.刀剑神域 川原砾 资源待整理 12.记录的地平线 橙乃真希 B站传送门 13.博人传-火影次世代 岸本齐史 B站传送门 14.命运石之门 志仓千代丸 B站传送门 15.从零开始的魔法书 虎走翔（虎走かける） B站传送门 16.夏目友人帐 绿川幸 B站传送门 国产动漫 最近看了些国产动漫，感觉我的认知被刷新了,不说能和日美一样，整体还是不错的。 动漫名字 作者 传送门 1.秦时明月 温世仁 优酷传送门 2.画江湖系列 刘阔，关心 不良人 灵主 杯莫停 3.镇魂街 许辰 B站传送门 4.狐妖小红娘 庹小新 B站传送门 1.K(King) 故事简介故事以架空世界的日本为背景，讲述了七个“王”之间的争执与异能者的战斗传奇。 王的称号 特点 第一王权者:白银之王 持有“不变”、“不灭”的属性。银色圣地的能力为操纵重力。 第二王权者·黄金之王 持有“命运”的属性，有把人的才能最大限度引发出来的能力。 第三王权者·赤之王 “暴力”与“热血”的象征。 第四王权者·青之王 “秩序”与“制御”的象征。 第五王权者·绿之王 司掌“变革” 第六王权者·灰之王 司掌“守护” 第七王权者·无色之王 被视为“鬼牌”般左右平衡的角色，每一任的能力都不相同，特性“变幻无常” 2.全职猎人 故事简介 主人公杰·富力士寻父金·富力士（一个强大的可怕的男人）的故事。于是可以看看富坚老贼脑洞有多大。 3.进击的巨人 故事简介 一个巨人吃人，人绝地反击的故事。当然巨人的出现是因为什么呢？这是个需要你自己发现的谜题。 4.钢之炼金术师 故事简介 为了复活母亲，进行了炼金术中最大的禁忌——人体炼成。然后围绕这个禁忌展开了故事。 5.东京食尸鬼 故事简介 故事以架空世界的现代东京为背景，描述以人肉为主食，被称为喰种（Ghoul）之人型怪物。 6.亚人 故事简介 不会死亡的人类“亚人”和会死亡的人类之间的爱恨情仇。 7.一拳超人 故事简介 因为拥有了最强的力量，变成了光头，似乎还失去了某些感情。然后就走上了一招制敌的没羞没臊的生活。 8.魔法禁书目录 故事简介 在东京这个充满故事的城市里，一帮有超能力的学生们在学园都市里快乐的玩耍，故事是围绕小黄书展开的故事。 9.军火女王 故事简介 该作以军火商人的独特视角描述了一名少年佣兵在一名年轻女性所领导的军火贩卖集团中的日常生活、和他的所见所闻。另外，展现了许多真实存在的武器资料，有时会加入现实世界的国际关系，是它的特色之一。 10.GANGSTA匪徒 黑街、谜般的药剂、拥有特异能力的人种──「黄昏种」…种种匪夷所思的要素交织而成的黑帮奇幻剧场 11.刀剑神域 故事简介 腹黑游戏设计者，人为制造进入游戏不能登出的设定。然后主人公们就可以没羞没臊的整天玩游戏，营救公主的故事。 12.记录的地平线 故事简介 又一个因为黑心游戏开发商引起的故事；老牌网络游戏“幻境神话”引入第十二次资料片改版“开拓智域”后，日本有三万名用户被锁在游戏当中。现实与游戏奇妙融合的世界中，男主角城惠在秋叶原街的舞台上展开了战斗。 13.博人传 故事简介 可以说是你看的 火影忍者 + 现代化 = 博人转，目前连载中 14.命运石之门 故事简介 这个番。。。只能强调一句话，坚持看到13集！坚持看到13集！坚持看到13集！ 椎名真由理 的嘟嘟噜，是作者前期留下多虐心的伏笔。 这是一个用12集做铺垫，然后开始虐心的，剧透下，结局是好的。 这个番堪称神作。 15.从零开始的魔法书 故事简介 美女与野兽的CP，算是半个治愈系 “想变回人类吗？那么佣兵，成为吾辈的护卫吧。” 16.夏目友人帐 故事简介 治愈系的番 斑/猫咪老师 猫形态蠢萌蠢萌的，看这个番也是因为有一次看到，他被绑起来在墙角挣扎的gif 国漫 1.秦时明月 故事简介 个人感觉前几部故事可以给满分(因为中国元素)，画面不是很Nice，后几部剧情略显拖拉，而且因为手游乱七八糟的东西，更新的很慢，月更。。。 整体来说，这算是我第一个看着还算可以的国漫了。 2.画江湖系列 故事简介 画江湖有 不良人、灵主、杯莫停，和未开始的转世门生 不良人 以五代十国为背景开展的，当然了和女帝相比，我还是喜欢倾国倾城这对姐妹花。 灵主 故事还是有点悬念的，但是整体感觉不佳 相比郎里香还是喜欢游龙戏凤多一点。 杯莫停 一个堪比柯南的佳作，每集都得死几个，整体的技能和剧情设计都不错。 3.镇魂街 故事简介 感觉这部作品，就女主槽点多一点，是一个不错的热血番，而且悬念也不少，挺值得看的。 4.妖狐小红娘 故事简介 蠢萌欢乐，看名字确实有点偏女性的番，可是如果一看，就根本停不下来。。。一口气几十集的节奏。","tags":[{"name":"动漫","slug":"动漫","permalink":"http://code.liup127.cn/tags/动漫/"}]}]